import logging
logger = logging.getLogger(__name__)

import datetime
from ..config import Config
from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from pyrogram.errors import UserNotParticipant, ChatAdminRequired, UsernameNotOccupied


@Client.on_message(filters.private & filters.incoming)
async def force_sub(c, m):
    if Config.FORCE_SUB:
        try:
            chat = await c.get_chat_member(Config.FORCE_SUB, m.from_user.id)
            if chat.status=='kicked':
                return await m.reply_text('Hai you are kicked from my updates channel. So, you are not able to use me',  quote=True)

        except UserNotParticipant:
            button = [[InlineKeyboardButton('join Updates channel', url=f'https://t.me/{Config.FORCE_SUB}')]]
            markup = InlineKeyboardMarkup(button)
            return await m.reply_text(text="Hey join in my updates channel to use me.", parse_mode='markdown', reply_markup=markup, quote=True)

        except ChatAdminRequired:
            logger.warning(f"Make me admin in @{Config.FORCE_SUB}")
            if m.from_user.id in Config.AUTH_USERS:
                return await m.reply_text(f"Make me admin in @{Config.FORCE_SUB}")

        except UsernameNotOccupied:
            logger.warning("T ú·¥á F·¥è Ä·¥Ñ·¥ás·¥ú ô  Us·¥á Ä…¥·¥Ä·¥ç·¥á W·¥Äs I…¥·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ G…™·¥†·¥á T ú·¥á C·¥è Ä Ä·¥á·¥Ñ·¥õ I…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥.")
            if m.from_user.id in Config.AUTH_USERS:
                return await m.reply_text("T ú·¥á “ì·¥è Ä·¥Ñ·¥ás·¥ú ô ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á ·¥°·¥Äs I…¥·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ. P ü·¥á·¥Äs·¥á …¢…™·¥†·¥á ·¥õ ú·¥á ·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á M·¥Ö.")

        except Exception as e:
            if "belongs to a user" in str(e):
                logger.warning("Forcesub username must be a channel username Not yours or any other users username")
                if m.from_user.id in Config.AUTH_USERS:
                    return await m.reply_text("F·¥è Ä·¥Ñ·¥ás·¥ú ô ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á ·¥ç·¥ús·¥õ  ô·¥á ·¥Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á N·¥è·¥õ  è·¥è·¥ú Äs ·¥è Ä ·¥Ä…¥ è ·¥è·¥õ ú·¥á Ä ·¥ús·¥á Äs ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á")
            logger.error(e)
            return await m.reply_text("S·¥è·¥ç·¥á·¥õ ú…™…¥…¢ W·¥á…¥·¥õ W Ä·¥è…¥…¢ü§î. I“ì Y·¥è·¥ú F·¥Ä·¥Ñ·¥á A…¢·¥Ä…™…¥ T ú·¥á P Ä·¥è·¥ç ô·¥á ü·¥ç C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ M è M·¥Ö[G Ä·¥è·¥ú·¥ò](https://t.me/mksupport1)", disable_web_page_preview=True, quote=True)

    await m.continue_propagation()

